"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LetterGenius v4.0
–ü—Ä–æ—Å—Ç–æ–π –ø–æ—Ç–æ–∫: –≤–∞–∫–∞–Ω—Å–∏—è ‚Üí —Ä–µ–∑—é–º–µ ‚Üí –ø–∏—Å—å–º–æ
"""
import asyncio
import logging
from services.smart_analyzer import analyze_and_generate

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
VACANCY_TEXT = """
Senior Python Developer
–ú—ã –∏—â–µ–º –æ–ø—ã—Ç–Ω–æ–≥–æ Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞–º–∏.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Python 3.8+ –Ω–µ –º–µ–Ω–µ–µ 5 –ª–µ—Ç
- –ó–Ω–∞–Ω–∏–µ Django/FastAPI
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å PostgreSQL, Redis
- –ó–Ω–∞–Ω–∏–µ Docker, Kubernetes
- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ B2+

–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:
- –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤
- –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
- –ö–æ–¥-—Ä–µ–≤—å—é
- –ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ junior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

–£—Å–ª–æ–≤–∏—è:
- –ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç 300,000 —Ä—É–±
- –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫
- –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞
- –î–ú–°
"""

RESUME_TEXT = """
–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
Senior Python Developer

–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 6 –ª–µ—Ç

–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏:
- Python 3.9, Django, FastAPI
- PostgreSQL, MongoDB, Redis
- Docker, Kubernetes, AWS
- Git, CI/CD
- –ê–Ω–≥–ª–∏–π—Å–∫–∏–π B2

–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
2020-2024: Senior Python Developer –≤ Tech Corp
- –†–∞–∑—Ä–∞–±–æ—Ç–∞–ª –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –¥–ª—è e-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API –Ω–∞ 40%
- –†—É–∫–æ–≤–æ–¥–∏–ª –∫–æ–º–∞–Ω–¥–æ–π –∏–∑ 3 junior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
- –í–Ω–µ–¥—Ä–∏–ª –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

2018-2020: Middle Python Developer –≤ StartupX
- –°–æ–∑–¥–∞–ª RESTful API –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- –†–∞–±–æ—Ç–∞–ª —Å –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ (1M+ –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å)
- –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–ª –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã

–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:
–ú–ì–£, –§–∞–∫—É–ª—å—Ç–µ—Ç –í–ú–ö, 2018
"""

async def test_v4_generation():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ v4.0
    """
    logger.info("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LetterGenius v4.0")
    logger.info("=" * 50)
    
    try:
        logger.info("üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–∏—Å—å–º–æ...")
        
        cover_letter = await analyze_and_generate(
            vacancy_text=VACANCY_TEXT,
            resume_text=RESUME_TEXT,
            style="professional"  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –≤ v4.0
        )
        
        logger.info("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
        logger.info("=" * 50)
        logger.info("üìÑ –†–ï–ó–£–õ–¨–¢–ê–¢:")
        logger.info("=" * 50)
        print(cover_letter)
        logger.info("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        if len(cover_letter) < 200:
            logger.warning("‚ö†Ô∏è  –ü–∏—Å—å–º–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ")
        
        if "AI" in cover_letter or "–ò–ò" in cover_letter:
            logger.warning("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ò–ò-—à—Ç–∞–º–ø—ã")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        checks = [
            ("Python" in cover_letter, "–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ Python"),
            ("–æ–ø—ã—Ç" in cover_letter.lower(), "–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–ø—ã—Ç–∞"),
            ("–∫–æ–º–∞–Ω–¥" in cover_letter.lower(), "–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ"),
            (len(cover_letter.split()) > 100, "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –¥–ª–∏–Ω–∞")
        ]
        
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:")
        for check, description in checks:
            status = "‚úÖ" if check else "‚ùå"
            logger.info(f"{status} {description}")
        
        logger.info("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(test_v4_generation()) 