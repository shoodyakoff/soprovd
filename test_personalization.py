"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
"""
from services.profile_analyzer import analyze_profile
from services.personalized_prompt import generate_personalized_prompt


def test_profile_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    job_description = """
    –ò—â–µ–º Senior Product Manager –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.
    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
    - –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å MVP –∏ –≥–∏–ø–æ—Ç–µ–∑–∞–º–∏
    - –£–º–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç—å roadmap –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å backlog
    - –û–ø—ã—Ç product discovery –∏ delivery
    - –ó–Ω–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    """
    
    resume = """
    –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤, Product Manager
    –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 5 –ª–µ—Ç
    
    - –†—É–∫–æ–≤–æ–¥–∏–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π MVP –¥–ª—è —Ñ–∏–Ω—Ç–µ—Ö-—Å—Ç–∞—Ä—Ç–∞–ø–∞
    - –û—Ç–≤–µ—á–∞–ª –∑–∞ –≤–µ—Å—å —Ü–∏–∫–ª –æ—Ç discovery –¥–æ delivery  
    - –ü–æ—Å—Ç—Ä–æ–∏–ª product roadmap –Ω–∞ 2 –≥–æ–¥–∞ –≤–ø–µ—Ä–µ–¥
    - –ó–∞–ø—É—Å—Ç–∏–ª A/B —Ç–µ—Å—Ç—ã, —É–≤–µ–ª–∏—á–∏–ª –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 25%
    - –†–∞–±–æ—Ç–∞–ª —Å backlog, –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–ª —Ñ–∏—á–∏
    """
    
    print("=== –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê –ü–†–û–§–ò–õ–Ø ===")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {job_description}")
    print(f"–†–µ–∑—é–º–µ: {resume}")
    print()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
    profile = analyze_profile(job_description, resume)
    
    print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê ===")
    print(f"–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {profile.profession}")
    print(f"–£—Ä–æ–≤–µ–Ω—å: {profile.level}")  
    print(f"–°—Ç–∏–ª—å: {profile.suggested_style.style}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∏–ª—è: {profile.suggested_style.tone_description}")
    print(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {profile.confidence_score:.2f}")
    print(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {profile.detected_keywords}")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = generate_personalized_prompt(job_description, resume, profile)
    
    print("=== –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢ ===")
    print(prompt)
    print()
    
    return profile, prompt


def test_fallback_scenario():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º fallback —Å—Ü–µ–Ω–∞—Ä–∏–π"""
    
    job_description = "–¢—Ä–µ–±—É–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –æ—Ñ–∏—Å–µ"
    resume = "–•–æ—á—É —Ä–∞–±–æ—Ç–∞—Ç—å, –∏–º–µ—é –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
    
    print("=== –¢–ï–°–¢ FALLBACK –°–¶–ï–ù–ê–†–ò–Ø ===")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {job_description}")
    print(f"–†–µ–∑—é–º–µ: {resume}")
    print()
    
    profile = analyze_profile(job_description, resume)
    
    print("=== –†–ï–ó–£–õ–¨–¢–ê–¢ FALLBACK ===")
    print(f"–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {profile.profession}")
    print(f"–£—Ä–æ–≤–µ–Ω—å: {profile.level}")
    print(f"–°—Ç–∏–ª—å: {profile.suggested_style.style}")
    print(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {profile.confidence_score:.2f}")
    print()


def test_designer_profile():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–∏–∑–∞–π–Ω–µ—Ä–∞"""
    
    job_description = """
    Middle UX/UI Designer –≤ –ø—Ä–æ–¥—É–∫—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
    - –°–æ–∑–¥–∞–Ω–∏–µ wireframe –∏ prototype –≤ Figma
    - –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ user flow
    - –†–∞–±–æ—Ç–∞ —Å –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–æ–π
    """
    
    resume = """
    –ê–Ω–Ω–∞ –î–∏–∑–∞–π–Ω–æ–≤–∞, UX/UI Designer
    - –°–æ–∑–¥–∞–≤–∞–ª–∞ wireframe –¥–ª—è –µ-commerce –ø—Ä–æ–µ–∫—Ç–∞
    - –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–ª–∞ user flow –¥–ª—è 5 –ø—Ä–æ–¥—É–∫—Ç–æ–≤  
    - –í–µ–ª–∞ –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—É –≤ Figma
    - –û—Ç–≤–µ—á–∞–ª–∞ –∑–∞ UX –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    """
    
    print("=== –¢–ï–°–¢ –ü–†–û–§–ò–õ–Ø –î–ò–ó–ê–ô–ù–ï–†–ê ===")
    
    profile = analyze_profile(job_description, resume)
    
    print(f"–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {profile.profession}")
    print(f"–£—Ä–æ–≤–µ–Ω—å: {profile.level}")
    print(f"–°—Ç–∏–ª—å: {profile.suggested_style.style}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {profile.suggested_style.tone_description}")
    print()


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏\n")
    
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
        test_profile_analysis()
        
        # Fallback —Ç–µ—Å—Ç  
        test_fallback_scenario()
        
        # –¢–µ—Å—Ç –¥–∏–∑–∞–π–Ω–µ—Ä–∞
        test_designer_profile()
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()