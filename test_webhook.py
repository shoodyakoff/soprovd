#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook –æ–±—Ä–∞–±–æ—Ç–∫–∏
"""
import asyncio
import sys
import os
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.payment_service import payment_service

async def test_webhook_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É webhook —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    try:
        # –î–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –∏–∑ –ë–î
        payment_id = "2ff3391e-000f-5001-8000-1ea01f6603f9"
        user_id = 5
        telegram_id = 678674926
        
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é webhook –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞: {payment_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ webhook –¥–∞–Ω–Ω—ã–µ
        test_webhook_data = {
            "event": "payment.succeeded",
            "object": {
                "id": payment_id,
                "status": "succeeded",
                "amount": {
                    "value": "1.00",
                    "currency": "RUB"
                },
                "metadata": {
                    "user_id": str(user_id),
                    "telegram_id": str(telegram_id),
                    "subscription_type": "premium"
                }
            }
        }
        
        print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ webhook –¥–∞–Ω–Ω—ã–µ:")
        print(json.dumps(test_webhook_data, indent=2))
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º webhook
        print(f"\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é webhook...")
        success = await payment_service.process_webhook(test_webhook_data)
        
        if success:
            print(f"‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            status = await payment_service.get_payment_status(payment_id)
            print(f"üìä –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {status}")
            
        else:
            print(f"‚ùå Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ webhook: {e}")
        import traceback
        traceback.print_exc()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await test_webhook_processing()

if __name__ == "__main__":
    asyncio.run(main()) 