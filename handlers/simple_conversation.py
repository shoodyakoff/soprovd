"""
Simple Conversation Handler v4.0
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫: –≤–∞–∫–∞–Ω—Å–∏—è ‚Üí —Ä–µ–∑—é–º–µ ‚Üí –ø–∏—Å—å–º–æ
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å—é –º–æ—â—å v3.0 –∞–Ω–∞–ª–∏–∑–∞, –Ω–æ —É–±–∏—Ä–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞
"""
import logging
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from services.smart_analyzer import analyze_and_generate

logger = logging.getLogger(__name__)

# –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è v4.0 (–Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏)
SIMPLE_WAITING_VACANCY, SIMPLE_WAITING_RESUME = range(200, 202)


async def start_simple_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞–ª–æ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ v4.0"""
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ v4.0")
    
    message = (
        "üéØ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–æ–ø—Ä–æ–≤–æ–¥!</b>\n\n"
        "–Ø —Å–æ–∑–¥–∞–º –¥–ª—è –≤–∞—Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –∑–∞ 30 —Å–µ–∫—É–Ω–¥.\n\n"
        "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        "‚Ä¢ –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ —Ä–µ–∑—é–º–µ —á–µ—Ä–µ–∑ GPT\n"
        "‚Ä¢ –ß–µ–ª–æ–≤–µ—á–Ω—ã–π —Å—Ç–∏–ª—å –±–µ–∑ –ò–ò-—à—Ç–∞–º–ø–æ–≤\n"
        "‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞\n\n"
        "üìù <b>–®–∞–≥ 1/2:</b> –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏"
    )
    
    if update.callback_query:
        await update.callback_query.edit_message_text(
            text=message,
            parse_mode='HTML'
        )
    elif update.message:
        await update.message.reply_text(
            text=message,
            parse_mode='HTML'
        )
    
    return SIMPLE_WAITING_VACANCY


async def handle_vacancy_simple(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–∞–∫–∞–Ω—Å–∏–∏"""
    logger.info(f"üìù handle_vacancy_simple: User {update.effective_user.id if update.effective_user else 'unknown'}")
    
    if not update.message or not update.message.text:
        logger.warning("‚ùå Missing message or text")
        if update.message:
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏\n\n"
                "–Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º.\n"
                "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Ç–µ–∫—Å—Ç–æ–º.\n\n"
                "–§–∞–π–ª—ã, –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è."
            )
        return SIMPLE_WAITING_VACANCY
    
    vacancy_text = update.message.text
    logger.info(f"üìù –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏: {len(vacancy_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏–Ω—ã
    if len(vacancy_text) < 100:
        await update.message.reply_text(
            "‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏\n"
            "(–º–∏–Ω–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)."
        )
        return SIMPLE_WAITING_VACANCY
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if context.user_data is not None:
        context.user_data['vacancy_text'] = vacancy_text
    
    await update.message.reply_text(
        "‚úÖ –í–∞–∫–∞–Ω—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!\n\n"
        "üìã <b>–®–∞–≥ 2/2:</b> –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Ä–µ–∑—é–º–µ",
        parse_mode='HTML'
    )
    
    return SIMPLE_WAITING_RESUME


async def handle_resume_simple(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–∑—é–º–µ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞"""
    logger.info(f"üìã handle_resume_simple: User {update.effective_user.id if update.effective_user else 'unknown'}")
    
    if not update.message or not update.message.text:
        logger.warning("‚ùå Missing message or text")
        if update.message:
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ\n\n"
                "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã, –Ω–∞–≤—ã–∫–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º.\n\n"
                "–§–∞–π–ª—ã, –≥–æ–ª–æ—Å–æ–≤—ã–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è."
            )
        return SIMPLE_WAITING_RESUME
    
    resume_text = update.message.text
    logger.info(f"üìã –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ: {len(resume_text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª–∏–Ω—ã
    if len(resume_text) < 100:
        await update.message.reply_text(
            "‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø—ã—Ç–∞\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–µ–±–µ: –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã, –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏,\n"
            "–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–º–∏–Ω–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞)."
        )
        return SIMPLE_WAITING_RESUME
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    vacancy_text = None
    if context.user_data is not None:
        vacancy_text = context.user_data.get('vacancy_text')
    
    if not vacancy_text:
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ—Ç–µ—Ä—è–Ω—ã.\n\n"
            "üîÑ –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start"
        )
        return ConversationHandler.END
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    processing_msg = await update.message.reply_text(
        "üîÑ –°–æ–∑–¥–∞—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ...\n\n"
        "‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç 15-30 —Å–µ–∫—É–Ω–¥\n"
        "üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞–∫–∞–Ω—Å–∏—é –∏ —Ä–µ–∑—é–º–µ\n"
        "‚úçÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é —á–µ–ª–æ–≤–µ—á–Ω—ã–π —Ç–µ–∫—Å—Ç\n"
        "üîß –£–±–∏—Ä–∞—é –ò–ò-—à—Ç–∞–º–ø—ã"
    )
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—É—é –º–æ—â—å v3.0 –∞–Ω–∞–ª–∏–∑–∞ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å—Ç–∏–ª–µ–º
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é analyze_and_generate v3.0...")
        
        cover_letter = await analyze_and_generate(
            vacancy_text=vacancy_text,
            resume_text=resume_text,
            style="professional"  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result_message = (
            "üéâ <b>–í–∞—à–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ!</b>\n\n"
            f"<code>{cover_letter}</code>\n\n"
            "üí° –ü–∏—Å—å–º–æ —Å–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ —Ä–µ–∑—é–º–µ\n\n"
            "---\n\n"
            "üîÑ –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–∏—Å—å–º–æ –¥–ª—è –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ /start"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è (–ª–∏–º–∏—Ç –¢–µ–ª–µ–≥—Ä–∞–º ~4096 —Å–∏–º–≤–æ–ª–æ–≤)
        if len(result_message) > 4000:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            await processing_msg.edit_text(
                "üéâ <b>–í–∞—à–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ!</b>",
                parse_mode='HTML'
            )
            
            if update.effective_chat:
                await update.effective_chat.send_message(
                    text=f"<code>{cover_letter}</code>",
                    parse_mode='HTML'
                )
                
                await update.effective_chat.send_message(
                    text=(
                        "üí° –ü–∏—Å—å–º–æ —Å–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ —Ä–µ–∑—é–º–µ\n\n"
                        "üîÑ –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–∏—Å—å–º–æ –¥–ª—è –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ /start"
                    ),
                    parse_mode='HTML'
                )
        else:
            await processing_msg.edit_text(
                text=result_message,
                parse_mode='HTML'
            )
        
        logger.info("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ v4.0")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞: {e}")
        
        await processing_msg.edit_text(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∏—Å—å–º–∞</b>\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
            "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ: /start",
            parse_mode='HTML'
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if context.user_data is not None:
        context.user_data.clear()
    
    return ConversationHandler.END


async def cancel_simple_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞"""
    logger.info("‚ùå –ü—Ä–æ—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ v4.0 –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    
    if context.user_data is not None:
        context.user_data.clear()
    
    if update.message:
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω–µ–Ω.\n\n"
            "üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ: /start"
        )
    
    return ConversationHandler.END


def get_simple_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç ConversationHandler –¥–ª—è v4.0 –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ—Ç–æ–∫–∞"""
    from telegram.ext import CommandHandler, MessageHandler, filters
    
    return ConversationHandler(
        entry_points=[
            CommandHandler("start", start_simple_conversation)
        ],
        states={
            SIMPLE_WAITING_VACANCY: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_vacancy_simple)
            ],
            SIMPLE_WAITING_RESUME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_resume_simple)
            ]
        },
        fallbacks=[
            CommandHandler('cancel', cancel_simple_conversation),
            CommandHandler('start', start_simple_conversation)
        ],
        name="simple_conversation_v4",
        persistent=False,
        per_message=False,
        per_chat=True,
        per_user=True
    ) 