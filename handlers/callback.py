"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫ (inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
"""
import logging
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from config import (
    STYLE_NEUTRAL, STYLE_BOLD, STYLE_FORMAL,
    WAITING_JOB_DESCRIPTION
)
from handlers.personalized_conversation import WAITING_JOB_DESCRIPTION as PERS_WAITING_JOB

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

async def handle_style_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫–∏
    """
    if not update.callback_query or not update.effective_user or not context.user_data:
        return ConversationHandler.END
        
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
    
    callback_data = query.data
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å
    style_mapping = {
        "style_neutral": STYLE_NEUTRAL,
        "style_bold": STYLE_BOLD,
        "style_formal": STYLE_FORMAL
    }
    
    style_names = {
        "style_neutral": "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π",
        "style_bold": "–°–º–µ–ª—ã–π", 
        "style_formal": "–§–æ—Ä–º–∞–ª—å–Ω—ã–π"
    }
    
    selected_style = style_mapping.get(callback_data) if callback_data else None
    style_name = style_names.get(callback_data, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π") if callback_data else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
    
    if selected_style and query.message:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å
        context.user_data['style'] = selected_style
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤—ã–±—Ä–∞–ª —Å—Ç–∏–ª—å: {style_name}")
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —É–±–∏—Ä–∞—è –∫–Ω–æ–ø–∫–∏
        await query.edit_message_text(
            f"–ü–æ–Ω—è–ª. –ò –ø–æ—Å–ª–µ–¥–Ω–∏–π —à—Ç—Ä–∏—Ö: –∫–∞–∫–æ–π —Å—Ç–∏–ª—å –ø–∏—Å—å–º–∞ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å?\n\n"
            f"‚úÖ –í—ã–±—Ä–∞–Ω: {style_name}"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        await query.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í—Å—ë –ø–æ–ª—É—á–∏–ª. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–∏—Å—å–º–æ...")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å
        from handlers.conversation import generate_letter_content
        return await generate_letter_content(query.message, context, update.effective_user.id)
    
    else:
        if query.message:
            await query.edit_message_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –∫–æ–º–∞–Ω–¥–æ–π /start"
            )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if context.user_data:
            context.user_data.clear()
        
        return ConversationHandler.END


async def handle_mode_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    """
    logger.info(f"üî• handle_mode_choice –≤—ã–∑–≤–∞–Ω! update: {update}, callback_query: {update.callback_query if update else None}")
    
    if not update.callback_query or not update.effective_user:
        logger.error("‚ùå handle_mode_choice: Missing callback_query or effective_user")
        return ConversationHandler.END
        
    query = update.callback_query
    logger.info(f"üî• –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query...")
    await query.answer()
    
    choice = query.data
    logger.info(f"üî• User {update.effective_user.id} chose mode: {choice}")
    
    if choice == "mode_classic":
        # –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º
        logger.info(f"üî• Editing message for classic mode...")
        await query.edit_message_text(
            "ü§ñ <b>–ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º –≤—ã–±—Ä–∞–Ω!</b>\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Ç–µ–∫—Å—Ç–æ–º.",
            parse_mode='HTML'
        )
        
        logger.info(f"üî• User {update.effective_user.id} selected classic mode, returning state: {WAITING_JOB_DESCRIPTION}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º—É –¥–∏–∞–ª–æ–≥—É
        return WAITING_JOB_DESCRIPTION
        
    elif choice == "mode_personalized":
        # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        logger.info(f"üî• Editing message for personalized mode...")
        await query.edit_message_text(
            "üéØ <b>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∏—Å–µ–º</b>\n\n"
            "–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à—É –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –∏ —É—Ä–æ–≤–µ–Ω—å, —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –ø–∏—Å—å–º–∞!\n\n"
            "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
            "1Ô∏è‚É£ –í—ã –ø—Ä–∏—Å—ã–ª–∞–µ—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏\n"
            "2Ô∏è‚É£ –ó–∞—Ç–µ–º –≤–∞—à–µ —Ä–µ–∑—é–º–µ\n"
            "3Ô∏è‚É£ –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å—Ç–∏–ª—å\n"
            "4Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ\n\n"
            "–ì–æ—Ç–æ–≤—ã? –ü—Ä–∏—à–ª–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ üëá",
            parse_mode='HTML'
        )
        
        logger.info(f"üî• User {update.effective_user.id} selected personalized mode, returning state: {PERS_WAITING_JOB}")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –æ–∂–∏–¥–∞–Ω–∏—é –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏
        return PERS_WAITING_JOB
    
    elif choice == "mode_v3":
        # v3.0 —Ä–µ–∂–∏–º - –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–¥–µ—Å—å, –ø—É—Å—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç v3_conversation_handler
        logger.info(f"üöÄ User {update.effective_user.id} –≤—ã–±—Ä–∞–ª v3.0 —Ä–µ–∂–∏–º - –ø–µ—Ä–µ–¥–∞–µ–º –≤ v3_conversation_handler")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º END, —á—Ç–æ–±—ã v3_conversation_handler –º–æ–≥ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å
        return ConversationHandler.END
    
    else:
        await query.edit_message_text(
            "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —Å /start"
        )
        return ConversationHandler.END 