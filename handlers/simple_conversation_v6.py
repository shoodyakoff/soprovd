"""
Simple Conversation Handler v6.0
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º smart_analyzer_v6
–†–µ–ª–∏–∑–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UX
"""
import logging
import time
from datetime import datetime
from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from services.smart_analyzer_v6 import generate_simple_letter
from services.analytics_service import analytics
from models.analytics_models import UserData, LetterSessionData

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è v6.0
WAITING_VACANCY, WAITING_RESUME = range(300, 302)

# ============================================================================
# –†–ï–õ–ò–ó–ù–ê–Ø –í–ï–†–°–ò–Ø 6.0 - –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£
# 
# ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Ä–µ–ª–∏–∑–∞:
# ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π
# ‚Ä¢ –ö–æ–º–∞–Ω–¥—ã: /help, /about, /support, /cancel, /start
# ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ
# ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
# ‚Ä¢ –í—Ä–µ–º—è–∑–∞–≤–∏—Å–∏–º—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
# ‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
# ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
# ‚Ä¢ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
# ‚Ä¢ –£–±—Ä–∞–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ (/new —É–¥–∞–ª–µ–Ω)
# ============================================================================


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
    if update.message:
        await update.message.reply_text(
            "üìö <b>–°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú</b>\n\n"
            "üéØ <b>/start</b> - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ\n"
            "‚ÑπÔ∏è <b>/about</b> - –û –±–æ—Ç–µ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö\n"
            "üìû <b>/support</b> - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n"
            "‚ùå <b>/cancel</b> - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å",
            parse_mode='HTML'
        )
        
        await update.message.reply_text(
            "üí° <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ /start\n"
            "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏\n"
            "3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ\n"
            "4Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ!\n\n"
            "‚ö° –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 30-45 —Å–µ–∫—É–Ω–¥",
            parse_mode='HTML'
        )


async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    if update.message:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —á–∞—Å—Ç—è–º–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await update.message.reply_text(
            "ü§ñ <b>–û –ë–û–¢–ï –°–û–ü–†–û–í–û–î</b>\n\n"
            "üéØ <b>–ú–∏—Å—Å–∏—è:</b> –ü–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–∞–±–æ—Ç—É –º–µ—á—Ç—ã\n\n"
            "‚ú® <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –≤–∞–∫–∞–Ω—Å–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
            "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –∫–∞–∂–¥—É—é –ø–æ–∑–∏—Ü–∏—é\n"
            "‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –ø–∏—Å—å–º–∞\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (30-45 —Å–µ–∫)",
            parse_mode='HTML'
        )
        
        await update.message.reply_text(
            "üîí <b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</b>\n"
            "‚Ä¢ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è\n"
            "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
            "‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å\n\n"
            "üìä <b>–í–µ—Ä—Å–∏—è:</b> 6.0\n"
            "üöÄ <b>–°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π</b>\n\n"
            "üíå –£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ —Ä–∞–±–æ—Ç—ã!",
            parse_mode='HTML'
        )


async def support_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    if update.message:
        await update.message.reply_text(
            "üìû <b>–ü–û–î–î–ï–†–ñ–ö–ê –ò –û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨</b>\n\n"
            "üí¨ <b>–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?</b>\n"
            "–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!\n\n"
            "üìß <b>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:</b>\n"
            "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n"
            "‚Ä¢ –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞\n"
            "‚Ä¢ –°–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–∞—Ö",
            parse_mode='HTML'
        )
        
        await update.message.reply_text(
            "üêõ <b>–ù–∞—à–ª–∏ –±–∞–≥?</b>\n"
            "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ\n\n"
            "üí° <b>–ï—Å—Ç—å –∏–¥–µ–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è?</b>\n"
            "–ú—ã —Ü–µ–Ω–∏–º –∫–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!\n\n"
            "‚ö° –û–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤",
            parse_mode='HTML'
        )





async def start_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ v6.0"""
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ v6.0")
    
    # –¢—Ä–µ–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = update.effective_user
    if user:
        user_data = UserData(
            telegram_user_id=user.id,
            username=user.username,
            first_name=user.first_name,
            language_code=user.language_code
        )
        user_id = await analytics.track_user(user_data)
        if user_id and context.user_data is not None:
            context.user_data['analytics_user_id'] = user_id
            await analytics.track_start_command(user_id)
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏
    user_name = ""
    if user and user.first_name:
        user_name = f", {user.first_name}"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    current_hour = datetime.now().hour
    if 6 <= current_hour < 12:
        time_greeting = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
    elif 12 <= current_hour < 18:
        time_greeting = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
    elif 18 <= current_hour < 23:
        time_greeting = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
    else:
        time_greeting = "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"
    
    message = (
        f"üéØ <b>{time_greeting}{user_name}! –Ø –°–æ–ø—Ä–æ–≤–æ–¥</b>\n\n"
        "üöÄ <b>–Ø —Å–æ–∑–¥–∞—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞ –∫ —Ä–µ–∑—é–º–µ!</b>\n\n"
        "‚ú® <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞–∫–∞–Ω—Å–∏—é –∏ –≤–∞—à–µ —Ä–µ–∑—é–º–µ\n"
        "‚Ä¢ –°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –ø–æ–¥ –∫–∞–∂–¥—É—é –ø–æ–∑–∏—Ü–∏—é\n"
        "‚Ä¢ –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞—é –≤–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã\n"
        "‚Ä¢ –£—á–∏—Ç—ã–≤–∞—é —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è\n\n"
        "‚ö° <b>–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ—Å—Ç–æ–π - –≤—Å–µ–≥–æ 2 —à–∞–≥–∞:</b>\n"
        "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏\n"
        "2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ\n\n"
        "‚è∞ –ü–∏—Å—å–º–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ —á–µ—Ä–µ–∑ 30-45 —Å–µ–∫—É–Ω–¥\n\n"
        "üìù <b>–®–∞–≥ 1/2:</b> –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏\n\n"
        "üí° <i>–°–æ–≤–µ—Ç: –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Å–∞–π—Ç–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è</i>"
    )
    
    if update.callback_query:
        await update.callback_query.edit_message_text(text=message, parse_mode='HTML')
    elif update.message:
        await update.message.reply_text(text=message, parse_mode='HTML')
    
    return WAITING_VACANCY


async def handle_vacancy(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏"""
    if not update.message or not update.message.text:
        if update.message:
            await update.message.reply_text(
                "‚ùå <b>–ù—É–∂–µ–Ω —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏</b>\n\n"
                "üìÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏\n\n"
                "üí° <i>–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π—Ç–µ —Ñ–∞–π–ª—ã - —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç</i>",
                parse_mode='HTML'
            )
        return WAITING_VACANCY
    
    vacancy_text = update.message.text
    
    if len(vacancy_text) < 100:
        await update.message.reply_text(
            "‚ùå <b>–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ</b>\n\n"
            f"üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(vacancy_text)} —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üìã –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º: 100 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
            "üí° <b>–ß—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å:</b>\n"
            "‚Ä¢ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞–Ω–¥–∏–¥–∞—Ç—É\n"
            "‚Ä¢ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã\n"
            "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏",
            parse_mode='HTML'
        )
        return WAITING_VACANCY
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∫–∞–Ω—Å–∏—é
    if context.user_data is not None:
        context.user_data['vacancy_text'] = vacancy_text
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        user_id = context.user_data.get('analytics_user_id')
        logger.info(f"üîç RAILWAY DEBUG: handle_vacancy analytics_user_id: {user_id}")
        
        if user_id:
            logger.info(f"üîç RAILWAY DEBUG: Creating LetterSessionData for user {user_id}")
            
            try:
                session_data = LetterSessionData(
                    user_id=user_id,
                    mode="v6.0",
                    job_description=vacancy_text[:1000],  # –ü–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤
                    job_description_length=len(vacancy_text),
                    selected_style="professional"
                )
                logger.info(f"üîç RAILWAY DEBUG: LetterSessionData created successfully")
                
                session_id = await analytics.create_letter_session(session_data)
                logger.info(f"üîç RAILWAY DEBUG: create_letter_session returned: {session_id}")
                
                if session_id:
                    context.user_data['analytics_session_id'] = session_id
                    logger.info(f"üîç RAILWAY DEBUG: Calling track_vacancy_sent...")
                    await analytics.track_vacancy_sent(user_id, session_id, len(vacancy_text))
                    logger.info(f"üîç RAILWAY DEBUG: track_vacancy_sent completed")
                else:
                    logger.error(f"‚ùå RAILWAY DEBUG: create_letter_session returned None!")
                    
            except Exception as e:
                logger.error(f"‚ùå RAILWAY DEBUG: Exception in vacancy analytics: {e}")
                import traceback
                logger.error(f"‚ùå RAILWAY DEBUG: Traceback: {traceback.format_exc()}")
        else:
            logger.error(f"‚ùå RAILWAY DEBUG: No analytics_user_id found!")
    else:
        logger.error(f"‚ùå RAILWAY DEBUG: context.user_data is None!")
    
    await update.message.reply_text(
        "‚úÖ <b>–û—Ç–ª–∏—á–Ω–æ! –í–∞–∫–∞–Ω—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞</b>\n\n"
        "üìã <b>–®–∞–≥ 2/2:</b> –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ\n\n"
        "üìù <b>–ß—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:</b>\n"
        "‚Ä¢ –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ\n"
        "‚Ä¢ –ú–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å HeadHunter, –•–∞–±—Ä –ö–∞—Ä—å–µ—Ä–∞\n"
        "‚Ä¢ –ò–ª–∏ –∏–∑ Word/PDF —Ñ–∞–π–ª–∞\n"
        "‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –∏ –Ω–∞–≤—ã–∫–∏\n\n"
        "üí° <i>–°–æ–≤–µ—Ç: –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–µ–∑—é–º–µ, —Ç–µ–º –ª—É—á—à–µ –ø–∏—Å—å–º–æ!</i>\n\n"
        "üîí <i>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ: –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è</i>",
        parse_mode='HTML'
    )
    
    return WAITING_RESUME


async def handle_resume(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—é–º–µ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å—å–º–∞"""
    if not update.message or not update.message.text:
        if update.message:
            await update.message.reply_text(
                "‚ùå <b>–ù—É–∂–µ–Ω —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ</b>\n\n"
                "üìÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞\n\n"
                "üí° <i>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∑—é–º–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</i>",
                parse_mode='HTML'
            )
        return WAITING_RESUME
    
    resume_text = update.message.text
    
    if len(resume_text) < 100:
        await update.message.reply_text(
            "‚ùå <b>–†–µ–∑—é–º–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ</b>\n\n"
            f"üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(resume_text)} —Å–∏–º–≤–æ–ª–æ–≤\n"
            f"üìã –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º: 100 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
            "üí° <b>–î–æ–±–∞–≤—å—Ç–µ –≤ —Ä–µ–∑—é–º–µ:</b>\n"
            "‚Ä¢ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (–¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è)\n"
            "‚Ä¢ –ù–∞–≤—ã–∫–∏ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏\n"
            "‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n"
            "‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
            parse_mode='HTML'
        )
        return WAITING_RESUME
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏—é
    vacancy_text = None
    if context.user_data is not None:
        vacancy_text = context.user_data.get('vacancy_text')
    
    if not vacancy_text:
        await update.message.reply_text("‚ùå –í–∞–∫–∞–Ω—Å–∏—è –ø–æ—Ç–µ—Ä—è–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
        return ConversationHandler.END
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
    processing_msg = await update.message.reply_text(
        "üöÄ <b>–ù–∞—á–∏–Ω–∞—é —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–∏–º –ø–∏—Å—å–º–æ–º!</b>\n\n"
        "üîç <b>–≠—Ç–∞–ø 3/3:</b> –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞–∫–∞–Ω—Å–∏—é...\n"
        "‚è≥ –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: 30-45 —Å–µ–∫—É–Ω–¥\n\n"
        "üí≠ <i>–°–æ–∑–¥–∞—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å</i>",
        parse_mode='HTML'
    )
    
    try:
        # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        user_id = None
        session_id = None
        if context.user_data is not None:
            user_id = context.user_data.get('analytics_user_id')
            session_id = context.user_data.get('analytics_session_id')
            
            logger.info(f"üîç RAILWAY DEBUG: handle_resume user_id: {user_id}, session_id: {session_id}")
            
            if user_id and session_id:
                try:
                    logger.info(f"üîç RAILWAY DEBUG: Calling track_resume_sent...")
                    await analytics.track_resume_sent(user_id, session_id, len(resume_text))
                    logger.info(f"üîç RAILWAY DEBUG: track_resume_sent completed")
                except Exception as e:
                    logger.error(f"‚ùå RAILWAY DEBUG: Exception in track_resume_sent: {e}")
            else:
                logger.error(f"‚ùå RAILWAY DEBUG: Missing user_id or session_id!")
        else:
            logger.error(f"‚ùå RAILWAY DEBUG: context.user_data is None in handle_resume!")
        
        # üéØ –ü–†–û–°–¢–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø v6.1: –¢–æ–ª—å–∫–æ –ø–∏—Å—å–º–æ, –±–µ–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
        start_time = time.time()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é - –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—é–º–µ
        if user_id and session_id:
            from services.ai_factory import AIFactory
            current_provider = AIFactory.get_provider_name()
            
            await analytics.update_letter_session(session_id, {
                'resume_text': resume_text[:1000],  # –ü–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
                'resume_length': len(resume_text),
                'openai_model_used': current_provider.lower()  # 'openai' –∏–ª–∏ 'claude'
            })
        
        letter = await generate_simple_letter(
            vacancy_text=vacancy_text,
            resume_text=resume_text,
            user_id=user_id,
            session_id=session_id
        )
        
        generation_time = int(time.time() - start_time)
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        await processing_msg.delete()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await update.message.reply_text(
            f"‚úçÔ∏è <b>–ü–ò–°–¨–ú–û:</b>\n\n{letter}",
            parse_mode='HTML'
        )
        
        await update.message.reply_text(
            f"üéâ <b>–ü–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ –∑–∞ {generation_time} —Å–µ–∫—É–Ω–¥!</b>\n\n"
            "‚ú® <b>–ß—Ç–æ –¥–∞–ª—å—à–µ:</b>\n"
            "‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∏—Å—å–º–æ\n"
            "‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –ø–æ–¥ —Å–µ–±—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é\n\n"
            "üîÑ <b>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ:</b> /start\n"
            "üí¨ <b>–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã:</b> /support\n\n"
            "üçÄ <b>–£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–µ —Ä–∞–±–æ—Ç—ã!</b>",
            parse_mode='HTML'
        )
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        if user_id and session_id:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é - –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            await analytics.update_letter_session(session_id, {
                'generated_letter': letter[:2000],  # –ü–µ—Ä–≤—ã–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
                'generated_letter_length': len(letter),
                'generation_time_seconds': generation_time,
                'status': 'completed'
            })
            
            await analytics.track_letter_generated(
                user_id, session_id, len(letter), generation_time
            )
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        
        # üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê: –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –ø–æ–º–µ—á–∞–µ–º —Å–µ—Å—Å–∏—é –∫–∞–∫ –∑–∞–±—Ä–æ—à–µ–Ω–Ω—É—é
        if user_id and session_id:
            try:
                import traceback
                from models.analytics_models import ErrorData
                
                error_data = ErrorData(
                    error_type=type(e).__name__,
                    error_message=str(e),
                    user_id=user_id,
                    session_id=session_id,
                    stack_trace=traceback.format_exc(),
                    handler_name='handle_resume'
                )
                await analytics.log_error(error_data)
                
                # –ü–æ–º–µ—á–∞–µ–º —Å–µ—Å—Å–∏—é –∫–∞–∫ –Ω–µ—É–¥–∞—á–Ω—É—é
                await analytics.update_letter_session(session_id, {
                    'status': 'abandoned'
                })
            except Exception as log_error:
                logger.error(f"Failed to log error to database: {log_error}")
        
        try:
            await processing_msg.delete()
        except:
            pass
        
        await update.message.reply_text(
            "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∏—Å—å–º–∞</b>\n\n"
            "üîß <b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>\n"
            "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑: /start\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–µ–∫—Å—Ç—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—ã–µ\n"
            "‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: /support\n\n"
            "üòî <i>–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!</i>",
            parse_mode='HTML'
        )
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    if context.user_data is not None:
        context.user_data.clear()
    
    return ConversationHandler.END


async def cancel_conversation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞"""
    if context.user_data is not None:
        context.user_data.clear()
    
    if update.message:
        await update.message.reply_text(
            "‚ùå <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ</b>\n\n"
            "üîÑ <b>–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ:</b> /start\n"
            "‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å:</b> /help\n\n"
            "üëã <i>–ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å–Ω–æ–≤–∞!</i>",
            parse_mode='HTML'
        )
    
    return ConversationHandler.END


def get_conversation_handler():
    """–°–æ–∑–¥–∞–µ—Ç ConversationHandler –¥–ª—è v6.0"""
    from telegram.ext import CommandHandler, MessageHandler, filters
    
    return ConversationHandler(
        entry_points=[
            CommandHandler("start", start_conversation)
        ],
        states={
            WAITING_VACANCY: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_vacancy)
            ],
            WAITING_RESUME: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, handle_resume)
            ]
        },
        fallbacks=[
            CommandHandler('cancel', cancel_conversation),
            CommandHandler('start', start_conversation)
        ],
        name="conversation_v6",
        persistent=False,
        per_message=False,
        per_chat=True,
        per_user=True
    )


def get_command_handlers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    from telegram.ext import CommandHandler
    
    return [
        CommandHandler("help", help_command),
        CommandHandler("about", about_command),
        CommandHandler("support", support_command)
    ] 