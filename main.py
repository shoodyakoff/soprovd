"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Telegram-–±–æ—Ç–∞ –°–æ–ø—Ä–æ–≤–æ–¥ v4.0
–ü—Ä–æ—Å—Ç–æ–π –ø–æ—Ç–æ–∫: –≤–∞–∫–∞–Ω—Å–∏—è ‚Üí —Ä–µ–∑—é–º–µ ‚Üí –ø–∏—Å—å–º–æ
"""
import logging
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    CallbackQueryHandler,
    ConversationHandler,
    filters
)

from config import TELEGRAM_BOT_TOKEN

from handlers.simple_conversation import get_simple_conversation_handler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.StreamHandler(),  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        logging.FileHandler('bot.log', encoding='utf-8')  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    ]
)
logger = logging.getLogger(__name__)

async def check_openai_api():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É OpenAI API –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    """
    from services.openai_service import OpenAIService
    openai_service = OpenAIService()
    
    is_working = await openai_service.test_api_connection()
    if not is_working:
        logger.error("‚ùå OpenAI API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
        logger.error("–ë–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω, –Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å–µ–º –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")
    
    return is_working

async def post_init(application):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    logger.info("–ü—Ä–æ–≤–µ—Ä—è—é OpenAI API...")
    await check_openai_api()

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ v4.0 - —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–æ–π –ø–æ—Ç–æ–∫
    """
    if not TELEGRAM_BOT_TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).post_init(post_init).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û v4.0 simple handler - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    simple_handler = get_simple_conversation_handler()
    application.add_handler(simple_handler)
    logger.info("üéØ v4.0 Simple ConversationHandler –¥–æ–±–∞–≤–ª–µ–Ω - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º!")
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã help
    async def help_handler(update, context):
        await update.message.reply_text(
            "üìã <b>–°–æ–ø—Ä–æ–≤–æ–¥ v4.0 - –£–º–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∏—Å–µ–º</b>\n\n"
            "üöÄ /start - —Å–æ–∑–¥–∞—Ç—å —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ\n"
            "‚ùì /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
            "üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º:\n"
            "1Ô∏è‚É£ –í–∞–∫–∞–Ω—Å–∏—è ‚Üí 2Ô∏è‚É£ –†–µ–∑—é–º–µ ‚Üí 3Ô∏è‚É£ –ì–æ—Ç–æ–≤–æ!",
            parse_mode='HTML'
        )
    
    application.add_handler(CommandHandler("help", help_handler))
    
    logger.info("üöÄ –ë–æ—Ç –°–æ–ø—Ä–æ–≤–æ–¥ v4.0 –∑–∞–ø—É—â–µ–Ω! –ü—Ä–æ—Å—Ç–æ–π –ø–æ—Ç–æ–∫: –≤–∞–∫–∞–Ω—Å–∏—è ‚Üí —Ä–µ–∑—é–º–µ ‚Üí –ø–∏—Å—å–º–æ")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=["message", "callback_query"])

if __name__ == "__main__":
    main() 