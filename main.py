"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Telegram-–±–æ—Ç–∞ –°–æ–ø—Ä–æ–≤–æ–¥ v6.0
–ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –µ–¥–∏–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ smart_analyzer_v6
FORCED UPDATE: 2025-06-24 08:08:00 UTC - COMMIT 697ea19 - WEBHOOK FIX
–ÆKASSA INTEGRATION: v10.1 - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–ª–∞—Ç–µ–∂–∏
"""

# –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –í–´–í–û–î –°–ê–ú–´–ô –ü–ï–†–í–´–ô - COMMIT fdccee3
print("=" * 60)
print("üö®üö®üö® MAIN.PY STARTING - COMMIT 697ea19 üö®üö®üö®")
print("üö®üö®üö® WEBHOOK FIXED - NEW CODE RUNNING! üö®üö®üö®")
print("üö®üö®üö® –ÆKASSA INTEGRATION v10.1 ENABLED! üö®üö®üö®")
print("=" * 60)

import logging
import os
import threading
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    CallbackQueryHandler,
    ConversationHandler,
    filters
)

# DEBUG: –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –î–û –∏–º–ø–æ—Ä—Ç–∞ config
print("=" * 50)
print("üö® RAILWAY FORCED DEBUG START üö®")
print("=" * 50)
print(f"üîç RAILWAY DEBUG: SUPABASE_URL = {os.getenv('SUPABASE_URL', 'NOT_FOUND')}")
print(f"üîç RAILWAY DEBUG: SUPABASE_KEY = {os.getenv('SUPABASE_KEY', 'NOT_FOUND')[:20]}...")
print(f"üîç RAILWAY DEBUG: ENVIRONMENT = {os.getenv('ENVIRONMENT', 'NOT_FOUND')}")
print(f"üîç RAILWAY DEBUG: TELEGRAM_BOT_TOKEN = {os.getenv('TELEGRAM_BOT_TOKEN', 'NOT_FOUND')[:20]}...")
print("=" * 50)
print("üö® RAILWAY FORCED DEBUG END üö®")
print("=" * 50)

from config import TELEGRAM_BOT_TOKEN

from handlers.simple_conversation_v6 import get_conversation_handler, get_command_handlers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.StreamHandler(),  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        logging.FileHandler('bot.log', encoding='utf-8')  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    ]
)
logger = logging.getLogger(__name__)

async def check_ai_api():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É AI API –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (OpenAI –∏–ª–∏ Claude)
    """
    from services.ai_factory import get_ai_service, AIFactory
    
    ai_service = get_ai_service()
    provider_name = AIFactory.get_provider_name()
    
    is_working = await ai_service.test_api_connection()
    if not is_working:
        logger.error(f"‚ùå {provider_name} API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
        logger.error("–ë–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω, –Ω–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∏—Å–µ–º –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å.")
    else:
        logger.info(f"‚úÖ {provider_name} API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
    
    return is_working

async def post_init(application):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    from services.ai_factory import AIFactory
    provider_name = AIFactory.get_provider_name()
    logger.info(f"–ü—Ä–æ–≤–µ—Ä—è—é {provider_name} API...")
    await check_ai_api()
    
    # üîç –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê SUPABASE –ê–ù–ê–õ–ò–¢–ò–ö–ò
    print("=" * 60)
    print("üîç RAILWAY SUPABASE ANALYTICS CHECK")
    print("=" * 60)
    
    try:
        from utils.database import SupabaseClient
        from services.analytics_service import analytics
        
        print("üìä –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
        logger.info("üìä –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...")
        
        client = SupabaseClient.get_client()
        is_available = SupabaseClient.is_available()
        
        if client and is_available:
            print("‚úÖ Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
            logger.info("‚úÖ Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        else:
            print("‚ùå Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
            logger.warning("‚ùå Supabase –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase: {e}")
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Supabase: {e}")
    
    print("=" * 60)

def start_webhook_server(bot):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç webhook —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        from webhook_handler import start_webhook_server as start_server
        logger.info("üöÄ Starting –ÆKassa webhook server...")
        start_server(bot)
    except Exception as e:
        logger.error(f"‚ùå Failed to start webhook server: {e}")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ v6.0 - –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –¥–ª—è –°—Ç–∞—Å–∞!
    """
    # –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°—Ä–∞–≤–Ω–∏–º —á—Ç–æ –≤ Railway Variables vs —á—Ç–æ —á–∏—Ç–∞–µ—Ç –∫–æ–¥
    print("üîç TELEGRAM TOKEN DIAGNOSTIC:")
    print(f"   Expected: 7647818988:AAFgh0...")
    print(f"   From config.py: {TELEGRAM_BOT_TOKEN}")
    print(f"   From os.getenv: {os.getenv('TELEGRAM_BOT_TOKEN')}")
    
    if TELEGRAM_BOT_TOKEN and TELEGRAM_BOT_TOKEN.startswith('7647818988'):
        print("‚úÖ Correct token found")
    else:
        print("‚ùå WRONG TOKEN! Railway variables not working!")
        print("üö® This explains why old bot instance is running")
    
    if not TELEGRAM_BOT_TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).post_init(post_init).build()
    
    # –ü–µ—Ä–µ–¥–∞–µ–º bot instance –≤ webhook_handler –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    try:
        from webhook_handler import set_bot_instance
        set_bot_instance(application.bot)
        logger.info("ü§ñ Bot instance passed to webhook handler")
    except Exception as e:
        logger.error(f"‚ùå Failed to set bot instance in webhook handler: {e}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ù–û–í–´–ô v6.0 handler - —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞!
    v6_handler = get_conversation_handler()
    application.add_handler(v6_handler)
    logger.info("üöÄ –°—Ç–∞—Å, v6.0 ConversationHandler –¥–æ–±–∞–≤–ª–µ–Ω - –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã help, about, support + –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ —Å–µ—Å—Å–∏–∏
    # –í–ê–ñ–ù–û: command_handlers —Å–æ–¥–µ—Ä–∂–∏—Ç MessageHandler –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    # –û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ü–û–°–õ–ï ConversationHandler, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
    command_handlers = get_command_handlers()
    for handler in command_handlers:
        application.add_handler(handler)
    logger.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã help, about, support + –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–Ω–µ —Å–µ—Å—Å–∏–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    
    # –°—Ç–∞—Ä—ã–π help handler —É–¥–∞–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –∏–∑ handlers
    
    logger.info("üöÄ –°—Ç–∞—Å, –±–æ—Ç –°–æ–ø—Ä–æ–≤–æ–¥ v6.0 –∑–∞–ø—É—â–µ–Ω! –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: smart_analyzer_v6 + UNIFIED_ANALYSIS_PROMPT!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º webhook —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –ÆKassa
    try:
        from config import YOOKASSA_ENABLED
        if YOOKASSA_ENABLED:
            webhook_thread = threading.Thread(target=lambda: start_webhook_server(application.bot), daemon=True)
            webhook_thread.start()
            logger.info("‚úÖ –ÆKassa webhook server started in background")
        else:
            logger.info("‚ÑπÔ∏è –ÆKassa webhook server disabled - payments not configured")
    except Exception as e:
        logger.error(f"‚ùå Failed to start webhook server: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=["message", "callback_query"])

if __name__ == "__main__":
    main() 